/*--------------------------------------------
    Date:       2011.04.11
    Update:     2011.04.11
	说明：串口调用及无线模块
----------------------------------------------*/
int SCI_i=0;
int *SCI_PWMDTY;
byte *SCI_PWM7;
char SCIsend[50];
/*--------------------------------------------
SCI_RXD: 串口接收函数
编写日期：20110411
----------------------------------------------*/
char SCI_RXD(void)
{
    char ch; 
    while (!(SCI0SR1 & 0x20));       //等待接收数据完毕
    SCI0SR1_RDRF = 1;
    ch = SCI0DRL;
    return ch;
}
/*---------------------------------------------
SCISend: 串口输出显示函数(显示单个字符)
输入参数：ch：显示的字符；
编写日期：20110411
-----------------------------------------------*/
void SCISend(unsigned char ch)
{ 
  if (ch == '\n')  
  {
      while(!(SCI0SR1&0x80)) ;     
      SCI0DRL= 0x0d;   
      while(!(SCI0SR1&0x80)) ;     
      SCI0DRL= 0x0a;               
     return;
  } 
  else while (!(SCI0SR1&0x80));
    SCI0DRH=0;
    SCI0DRL=ch;
}
/*---------------------------------------------
LCD_write_cizu: 串口输出显示函数(显示字符串)
输入参数：ch：显示的字符串
编写日期：20110411
-----------------------------------------------*/
void SCISend_chars(const signed char ch[])
 {
 int i;
 for(i=0;i<strlen(ch);i++) {
 SCISend(ch[i]);
 }
 SCISend('\n');
 }
 /*---------------------------------------
SCI_Init: SCI初始化
编写日期：200110411
-----------------------------------------  */
static void SCI_Init(void)  //SCI
{
    SCI0CR1=0x00;
    SCI0CR2=0x2c;
     SCI0BD=260;                     //设置波特率公式=总线频率/所需要的波特率/16=所要设置的值;
                  
}

void SendSmartcarInfo(byte temp_laser_array[]) {
    int i; 
    int data;
    for(i=0;i<=LASER_MAX-1;i++)    //发送激光管信息数组
        {data=temp_laser_array[i];
            if(data == 0) {
            SCISend('0');   
            }
        else if(data == 1){
             SCISend('1'); 
        }
      /*      if((i+1)%3==0){
        SCISend(' '); 
        }   */
        }
    SCISend('\n');
}

void SCI_chuli(char a[],char x)
{
	char *q;
	switch(x){ 
	case 'X':{
	q = strtok(a, "X"); 
	{
	  *SCI_PWMDTY=atoi(q); 
  PWMDTY01=*SCI_PWMDTY;
  (void)sprintf(SCIsend,"当前摆头舵机值为:%d",PWMDTY01);  
  SCISend_chars(SCIsend);
	}
	}   
	break;
	case 'S':{
	q = strtok(a, "S"); 
	{
  *SCI_PWMDTY=atoi(q); 
  PWMDTY45=*SCI_PWMDTY;
  (void)sprintf(SCIsend,"当前转角舵机值为:%d",PWMDTY45);  
  SCISend_chars(SCIsend); 
	}
	}   
	break;
	case 'P':{
	q = strtok(a, "P"); 
	{
	*SCI_PWM7=(byte)atoi(q); 
  PWMPER7=*SCI_PWM7;
  (void)sprintf(SCIsend,"P7口的频率为:%d",PWMPER7);  
  SCISend_chars(SCIsend);
	}
	}   
	break;
	case 'Z':{
	q = strtok(a, "Z"); 
	{
	*SCI_PWM7=(byte)atoi(q); 
  PWMDTY7=*SCI_PWM7;
  (void)sprintf(SCIsend,"P7口的占空比为:%d",PWMDTY7);  
  SCISend_chars(SCIsend);
	}
	}   
	break;
}
}
/*---------------------------------------
无线串口中断接收
编写日期：20110411
-----------------------------------------*/
#pragma CODE_SEG __NEAR_SEG NON_BANKED 
interrupt 20 void Rx_SCI(void)
{
    DisableInterrupts;
      SCIreceive[SCI_i]=SCI_RXD();
      switch(SCIreceive[SCI_i]) {
        case 'S': 
        {
        SCI_chuli(SCIreceive,'S');
        SCI_i=0; 
        }  
        break;
        case 'X': 
        {
        SCI_chuli(SCIreceive,'X');
        SCI_i=0; 
        }  
        break;
        case 'P': 
        {

        SCI_chuli(SCIreceive,'P');
        SCI_i=0;
        }
        break;
        case 'Z': 
        {
        SCI_chuli(SCIreceive,'Z');
        SCI_i=0;
        }
        break;
      default:
        SCI_i++;
        break; 
      }
    EnableInterrupts;
} 
#pragma CODE_SEG DEFAULT